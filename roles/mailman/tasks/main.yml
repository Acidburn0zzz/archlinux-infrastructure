---

- name: install mailman
  pacman: name=mailman3,mailman3-hyperkitty,postorius,python-psycopg2,uwsgi,uwsgi-plugin-python,hyperkitty state=present

- name: add mailman postgres db
  postgresql_db: db=mailman
  become: yes
  become_user: postgres
  become_method: su

- name: add mailman postgres user
  postgresql_user: db=mailman name=mailman password={{ vault_postgres_users.mailman }} encrypted=true
  become: yes
  become_user: postgres
  become_method: su

- template: src="mailman.cfg.j2" dest="/etc/mailman.cfg" owner=mailman group=root mode=0644

- name: add hyperkitty postgres db
  postgresql_db: db=hyperkitty
  become: yes
  become_user: postgres
  become_method: su

- name: add hyperkitty postgres user
  postgresql_user: db=hyperkitty name={{ hyperkitty_db_user }} password={{ vault_postgres_users.hyperkitty }} encrypted=true
  become: yes
  become_user: postgres
  become_method: su

- file: src=/etc/webapps/hyperkitty/settings_local.py dest=/usr/share/webapps/hyperkitty/settings_local.py owner=root group=hyperkitty state=link

- template: src="hyperkitty.py.j2" dest="/etc/webapps/hyperkitty/settings_local.py" owner=root group=hyperkitty mode=0644

# TODO: only run when required, ie. hyperkitty package updated
- name: generate a hyperkitty database
  command: django-admin migrate --pythonpath {{ hyperkitty_dir }} --settings settings
  become: yes
  become_user: hyperkitty
  become_method: sudo

- name: run collectstatic for hyperkitty
  command: django-admin collectstatic --pythonpath {{ hyperkitty_dir }} --settings settings --noinput
  become: yes
  become_user: hyperkitty
  become_method: sudo

- name: run compress for hyperkitty
  command: django-admin compress --pythonpath {{ hyperkitty_dir }} --settings settings
  become: yes
  become_user: hyperkitty
  become_method: sudo

# TODO: run only once
- name: populate the hyperkitty database
  command: django-admin loaddata --pythonpath {{ hyperkitty_dir }} --settings settings first_start
  become: yes
  become_user: hyperkitty
  become_method: sudo

# TODO: run only once
- name: populate the hyperkitty database
  command: django-admin loaddata --pythonpath {{ hyperkitty_dir }} --settings settings first_start
  become: yes
  become_user: hyperkitty
  become_method: sudo

- name: check if hyperkitty admin user exists
  command: echo "from django.contrib.auth import get_user_model; User = get_user_model(); print(User.objects.filter(username='{{hyperkitty_admin_user}}').count()>0)" | /usr/bin/python ./manage.py shell
  args:
    chdir: "{{ hyperkitty_dir }}"
  become: yes
  become_user: hyperkitty
  become_method: sudo
  register: hyperkitty_superuser_existed

- name: create hyperkitty admin user
  command: django-admin createsuperuser --pythonpath {{ hyperkitty_dir }} --settings settings --noinput --username={{ hyperkitty_admin_user }} --email={{ hyperkitty_admin_email }}
  environment:
    DJANGO_SUPERUSER_PASSWORD: "{{ vault_mailman_hyperkitty_admin_password }}"
  become: yes
  become_user: hyperkitty
  become_method: sudo
  when: not hyperkitty_superuser_existed

- name: copy uwsgi-secure@.socket service
  copy: src=uwsgi-secure@.service dest=/etc/systemd/system/uwsgi-secure@.service
  notify:
    - daemon reload

- name: copy uwsgi-secure@.socket service
  copy: src=uwsgi-secure@.socket dest=/etc/systemd/system/uwsgi-secure@.socket
  notify:
    - daemon reload

- name: create ssl cert
  command: certbot certonly --email webmaster@archlinux.org --agree-tos --rsa-key-size 4096 --renew-by-default --webroot -w {{letsencrypt_validation_dir}} -d '{{ mailman_domain }}' creates='/etc/letsencrypt/live/{{ mailman_domain }}/fullchain.pem'

- name: make nginx log dir
  file: path=/var/log/nginx/{{ mailman_domain }} state=directory owner=root group=root mode=0755

- name: set up nginx
  template: src=nginx.d.conf.j2 dest="{{ mailman_nginx_conf }}" owner=root group=root mode=644
  notify:
    - reload nginx
  tags: ['nginx']

- name: make nginx log dir
  file: path=/var/log/nginx/{{ mailman_domain }} state=directory owner=root group=root mode=0755

- name: enable hyperkitty socket
  service: name="uwsgi-secure@hyperkitty.socket" enabled=yes state=started

- name: enable hyperkitty asynchronous operations service
  service: name="hyperkitty-qcluster.service" enabled=yes state=started

- name: start and enable mailman core service
  service: name="mailman3.service" enabled=yes state=started

- name: start and enable mailman digests timer
  service: name="mailman3-digests.timer" enabled=yes state=started

- name: start and enable mailman notify timer
  service: name="mailman3-notify.timer" enabled=yes state=started
